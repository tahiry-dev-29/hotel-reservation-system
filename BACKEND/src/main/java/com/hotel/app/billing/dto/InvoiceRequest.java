package com.hotel.app.billing.dto;

import com.hotel.app.billing.model.InvoiceStatus;
import jakarta.validation.Valid;
import jakarta.validation.constraints.Min;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import lombok.Builder;
import lombok.Data;

import java.time.LocalDate;
import java.util.List;

/**
 * DTO for creating or updating an Invoice.
 */
@Data
@Builder
public class InvoiceRequest {

    // Invoice number might be auto-generated by service, but can be provided for specific use cases
    private String invoiceNumber;

    @NotBlank(message = "L'ID du client est obligatoire.")
    private String customerId; // Use customer ID for linking

    // private String bookingId; // Optional: booking ID for linking

    @NotNull(message = "La date d'émission est obligatoire.")
    private LocalDate issueDate;

    @NotNull(message = "La date d'échéance est obligatoire.")
    private LocalDate dueDate;

    // TotalAmount, PaidAmount, BalanceDue can be calculated by the service,
    // but might be provided for initial creation or specific updates
    @Min(value = 0, message = "Le montant total ne peut pas être négatif.")
    private Double totalAmount;

    @Min(value = 0, message = "Le montant payé ne peut pas être négatif.")
    private Double paidAmount;

    @Min(value = 0, message = "Le solde dû ne peut pas être négatif.")
    private Double balanceDue;

    @NotNull(message = "Le statut de la facture est obligatoire.")
    private InvoiceStatus status;

    @Valid // Validate nested InvoiceItemDto list
    @NotNull(message = "Les articles de la facture sont obligatoires.")
    private List<InvoiceItemDto> items;

    private String notes;
}
